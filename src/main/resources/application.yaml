spring:
  data:
    mongodb:
      uri: mongodb://localhost:27017/orderdb
    redis:
      host: localhost
      port: 6379
  cache:
    type: redis
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: order-consumer-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

order:
  kafka:
    topics:
      order-created: order-created
    consumer-group: order-consumer-group

logging:
  level:
    root: INFO
    org.springframework.kafka: DEBUG
    org.apache.kafka.clients.consumer: INFO
    org.springdoc: DEBUG
    org.springdoc.api: DEBUG
    org.springframework.web: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  prometheus:
    metrics:
      export:
        enabled: true


server:
  port: 8080
